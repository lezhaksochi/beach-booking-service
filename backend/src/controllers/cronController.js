const Booking = require('../models/Booking')

class CronController {
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –∏—Å—Ç–µ–∫—à–∏—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
  static async updateExpiredBookings() {
    try {
      console.log('üîÑ –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Å—Ç–µ–∫—à–∏—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π...')
      
      const updatedBookings = await Booking.updateExpiredBookings()
      
      if (updatedBookings.length > 0) {
        console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ ${updatedBookings.length} –∏—Å—Ç–µ–∫—à–∏—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π:`)
        updatedBookings.forEach(booking => {
          console.log(`  - ID: ${booking.id}, –∏—Å—Ç–µ–∫–ª–æ: ${booking.end_time}`)
        })
      } else {
        console.log('‚úÖ –ò—Å—Ç–µ–∫—à–∏—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
      }
      
      return updatedBookings
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Å—Ç–µ–∫—à–∏—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π:', error)
      throw error
    }
  }

  // –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á
  static async runAllTasks() {
    try {
      console.log('üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á...')
      
      const results = {
        expiredBookings: await CronController.updateExpiredBookings()
      }
      
      console.log('üéâ –í—Å–µ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ')
      return results
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á:', error)
      throw error
    }
  }
}

module.exports = CronController