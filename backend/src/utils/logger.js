/**
 * –°–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
 */

const isDevelopment = process.env.NODE_ENV === 'development'

class Logger {
  static info(context, message, data = null) {
    const timestamp = new Date().toISOString()
    if (isDevelopment) {
      console.log(`‚ÑπÔ∏è [${context}] ${message}`, data ? data : '')
    } else {
      console.log(`${timestamp} - INFO - [${context}] ${message}`)
    }
  }

  static success(context, message, data = null) {
    const timestamp = new Date().toISOString()
    if (isDevelopment) {
      console.log(`‚úÖ [${context}] ${message}`, data ? data : '')
    } else {
      console.log(`${timestamp} - SUCCESS - [${context}] ${message}`)
    }
  }

  static warn(context, message, data = null) {
    const timestamp = new Date().toISOString()
    if (isDevelopment) {
      console.warn(`‚ö†Ô∏è [${context}] ${message}`, data ? data : '')
    } else {
      console.warn(`${timestamp} - WARN - [${context}] ${message}`)
    }
  }

  static error(context, message, error = null, sensitiveData = null) {
    const timestamp = new Date().toISOString()
    
    if (isDevelopment) {
      console.error(`üí• [${context}] ${message}`, {
        error: error ? {
          message: error.message,
          stack: error.stack,
          code: error.code,
          name: error.name
        } : undefined,
        data: sensitiveData
      })
    } else {
      // –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –Ω–µ –≤—ã–≤–æ–¥–∏–º —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      console.error(`${timestamp} - ERROR - [${context}] ${message}`, {
        error: error ? error.message : undefined
      })
    }
  }

  static debug(context, message, data = null) {
    if (isDevelopment) {
      console.log(`üîç [${context}] ${message}`, data ? data : '')
    }
    // –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ debug –ª–æ–≥–∏ –Ω–µ –≤—ã–≤–æ–¥—è—Ç—Å—è
  }

  static security(context, message, data = null) {
    const timestamp = new Date().toISOString()
    // –õ–æ–≥–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤—Å–µ–≥–¥–∞ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è
    console.log(`üîê ${timestamp} - SECURITY - [${context}] ${message}`)
    
    if (isDevelopment && data) {
      console.log('Security data:', data)
    }
  }

  // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
  static adminAuth(message, data = null) {
    if (isDevelopment) {
      console.log(`üîë [ADMIN AUTH] ${message}`, data ? data : '')
    } else {
      const timestamp = new Date().toISOString()
      console.log(`${timestamp} - ADMIN_AUTH - ${message}`)
    }
  }

  static adminAction(adminEmail, action, resourceType, resourceId = null) {
    const timestamp = new Date().toISOString()
    console.log(`üìù ${timestamp} - ADMIN_ACTION - ${adminEmail} - ${action} - ${resourceType}${resourceId ? ` - ${resourceId}` : ''}`)
  }
}

module.exports = Logger